{"remainingRequest":"C:\\Users\\jwu08\\vuex-project-for-share\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jwu08\\vuex-project-for-share\\src\\store.js","dependencies":[{"path":"C:\\Users\\jwu08\\vuex-project-for-share\\src\\store.js","mtime":1587374401800},{"path":"C:\\Users\\jwu08\\vuex-project-for-share\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jwu08\\vuex-project-for-share\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    allUsers: [{\n      userId: 'hoza123',\n      password: '123',\n      name: 'Hoza',\n      address: 'Seoul',\n      src: 'https://goo.gl/oqLfJR'\n    }, {\n      userId: 'max123',\n      password: '456',\n      name: 'Max',\n      address: 'Berlin',\n      src: 'https://goo.gl/Ksk9B9'\n    }, {\n      userId: 'lego123',\n      password: '789',\n      name: 'Lego',\n      address: 'Busan',\n      src: 'https://goo.gl/x7SpCD'\n    }]\n  },\n  getters: {\n    //computed\n    allUsersCount: function allUsersCount(state) {\n      //function: state => {}\n      return state.allUsers.length;\n    },\n    countOfSeoul: function countOfSeoul(state) {\n      var count = 0;\n      state.allUsers.forEach(function (user) {\n        if (user.address === 'Seoul') {\n          count++;\n        }\n      });\n      return count;\n    },\n    percentOfSeoul: function percentOfSeoul(state, getters) {\n      return Math.round(getters.countOfSeoul / getters.allUsersCount * 100);\n    }\n  },\n  mutations: {\n    addUsers: function addUsers(state, payload) {\n      state.allUsers.push(payload);\n    }\n  },\n  actions: {}\n});",{"version":3,"sources":["C:/Users/jwu08/vuex-project-for-share/src/store.js"],"names":["Vue","Vuex","use","Store","state","allUsers","userId","password","name","address","src","getters","allUsersCount","length","countOfSeoul","count","forEach","user","percentOfSeoul","Math","round","mutations","addUsers","payload","push","actions"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAC,CACP;AAACC,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE,OAA5D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KADO,EAEP;AAACJ,MAAAA,MAAM,EAAE,QAAT;AAAmBC,MAAAA,QAAQ,EAAE,KAA7B;AAAoCC,MAAAA,IAAI,EAAE,KAA1C;AAAiDC,MAAAA,OAAO,EAAE,QAA1D;AAAoEC,MAAAA,GAAG,EAAC;AAAxE,KAFO,EAGP;AAACJ,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE,OAA5D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KAHO;AADJ,GADqB;AAQ5BC,EAAAA,OAAO,EAAC;AAAE;AACRC,IAAAA,aAAa,EAAE,uBAASR,KAAT,EAAgB;AAAE;AAC/B,aAAOA,KAAK,CAACC,QAAN,CAAeQ,MAAtB;AACD,KAHK;AAINC,IAAAA,YAAY,EAAE,sBAAAV,KAAK,EAAE;AACnB,UAAIW,KAAK,GAAE,CAAX;AACAX,MAAAA,KAAK,CAACC,QAAN,CAAeW,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,YAAGA,IAAI,CAACR,OAAL,KAAiB,OAApB,EAA4B;AAC1BM,UAAAA,KAAK;AACN;AACF,OAJD;AAKA,aAAOA,KAAP;AACD,KAZK;AAaNG,IAAAA,cAAc,EAAE,wBAACd,KAAD,EAAOO,OAAP,EAAmB;AACjC,aAAOQ,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACG,YAAR,GAAsBH,OAAO,CAACC,aAA9B,GAA8C,GAAzD,CAAP;AACD;AAfK,GARoB;AAyB5BS,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,kBAAClB,KAAD,EAAQmB,OAAR,EAAmB;AAC3BnB,MAAAA,KAAK,CAACC,QAAN,CAAemB,IAAf,CAAoBD,OAApB;AACD;AAHQ,GAzBiB;AA8B5BE,EAAAA,OAAO,EAAE;AA9BmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    allUsers:[\n      {userId: 'hoza123', password: '123', name: 'Hoza', address: 'Seoul', src:'https://goo.gl/oqLfJR'},\n      {userId: 'max123', password: '456', name: 'Max', address: 'Berlin', src:'https://goo.gl/Ksk9B9'},\n      {userId: 'lego123', password: '789', name: 'Lego', address: 'Busan', src:'https://goo.gl/x7SpCD'}\n    ]\n  },\n  getters:{ //computed\n    allUsersCount: function(state) { //function: state => {}\n      return state.allUsers.length\n    },\n    countOfSeoul: state=>{\n      let count =0\n      state.allUsers.forEach(user => {\n        if(user.address === 'Seoul'){\n          count++\n        }\n      })\n      return count\n    },\n    percentOfSeoul: (state,getters) => {\n      return Math.round(getters.countOfSeoul/ getters.allUsersCount * 100)\n    }\n  },\n  mutations: {\n    addUsers: (state, payload) =>{\n      state.allUsers.push(payload)\n    }\n  },\n  actions: {\n\n  }\n})\n"]}]}